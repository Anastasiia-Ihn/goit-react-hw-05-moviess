{"version":3,"file":"static/js/304.5ee4813d.chunk.js","mappings":"iNAEaA,EAAmBC,EAAAA,GAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,4RAC9B,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,OAAOC,MAAM,IAaxBC,EAAWP,EAAAA,GAAAA,GAASQ,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,ugBACX,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,OAAOI,UAAU,I,kBCTvCC,EAAa,SAAHC,GAAkB,IAAZC,EAAID,EAAJC,KACrBC,GAAWC,EAAAA,EAAAA,MAEjB,OACEC,EAAAA,EAAAA,KAAChB,EAAgB,CAAAiB,SACdJ,EAAKK,KAAI,SAAAC,GAAE,OACVC,EAAAA,EAAAA,MAACZ,EAAQ,CAAAS,SAAA,EAELD,EAAAA,EAAAA,KAAA,OACEK,IACEF,EAAGG,YAAW,GAAAC,OACPC,EAAAA,GAAeD,OAAGJ,EAAGG,aAb1C,gFAgBYG,IAAKN,EAAGO,eACRC,MAAO,IACPC,OAAQ,OAGZZ,EAAAA,EAAAA,KAACa,EAAAA,GAAI,CAACC,GAAE,WAAAP,OAAaJ,EAAGY,IAAMC,MAAO,CAAEC,KAAMnB,GAAWG,UACtDD,EAAAA,EAAAA,KAAA,MAAAC,SAAKE,EAAGe,YAdGf,EAAGY,GAgBP,KAInB,C,gJChCaI,E,OAAYlC,GAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,6E,SCGnB,SAASiC,IACtB,IAAAC,GAAkCC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAvCI,EAASF,EAAA,GAAEG,EAAYH,EAAA,GAe9B,OAbAI,EAAAA,EAAAA,YAAU,WACkB,SAAAC,IAQzB,OARyBA,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAA1B,SAAAC,IAAA,IAAAC,EAAA,OAAAF,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,GAEyBC,EAAAA,EAAAA,MAAY,KAAD,EAA1BJ,EAAMC,EAAAI,KAEZX,EAAaM,EAAOM,SAASL,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAM,GAAAN,EAAA,SAE7BO,QAAQC,IAAI,OAAO,yBAAAR,EAAAS,OAAA,GAAAX,EAAA,mBAEtBY,MAAA,KAAAC,UAAA,EATc,WACWhB,EAAAe,MAAC,KAADC,UAAA,CAS1BC,EACF,GAAG,KAGDzC,EAAAA,EAAAA,MAAA0C,EAAAA,SAAA,CAAA7C,SAAA,EACED,EAAAA,EAAAA,KAACmB,EAAS,CAAAlB,SAAC,oBACXD,EAAAA,EAAAA,KAACL,EAAAA,EAAU,CAACE,KAAM4B,MAGxB,C","sources":["components/ListTrends/ListTrends.styled.js","components/ListTrends/ListTrends.jsx","pages/Home/Home.styled.js","pages/Home/Home.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ListTrendsStyled = styled.ul`\n  color: ${p => p.theme.colors.active};\n  display: grid;\n  max-width: calc(100vw - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n  grid-gap: 16px;\n  margin-top: 0;\n  margin-bottom: 50px;\n  padding: 0;\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport const ItemList = styled.li`\n  background-color: ${p => p.theme.colors.darkPurple};\n  border-radius: 5px;\n  box-shadow: 10px 11px 10px 2px rgba(34, 60, 80, 0.2);\n  overflow: hidden;\n  height: 418px;\n  :focus,\n  :hover {\n    cursor: pointer;\n  }\n  & img {\n    display: block;\n\n    width: 100%;\n  }\n  & h3 {\n    padding: 8px 12px;\n    line-height: 1.36;\n\n    text-align: center;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: wrap;\n    display: -webkit-box;\n    -webkit-line-clamp: 2;\n    -webkit-box-orient: vertical;\n  }\n`;\n","import { Link, useLocation } from 'react-router-dom';\nimport { ItemList, ListTrendsStyled } from './ListTrends.styled';\n\nimport { BASE_POSTER_URL } from '../../utils/constants';\n\nconst defaultImg =\n  '<https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700>';\n\nexport const ListTrends = ({ list }) => {\n  const location = useLocation();\n\n  return (\n    <ListTrendsStyled>\n      {list.map(el => (\n        <ItemList key={el.id}>\n          {\n            <img\n              src={\n                el.poster_path\n                  ? `${BASE_POSTER_URL}${el.poster_path}`\n                  : defaultImg\n              }\n              alt={el.original_title}\n              width={226}\n              height={339}\n            ></img>\n          }\n          <Link to={`/movies/${el.id}`} state={{ from: location }}>\n            <h3>{el.title}</h3>\n          </Link>\n        </ItemList>\n      ))}\n    </ListTrendsStyled>\n  );\n};\n","import styled from 'styled-components';\n\nexport const MainTitle = styled.h1`\n  text-align: center;\n  font-size: 60px;\n  margin-bottom: 60px;\n`;\n","import { fetchData } from 'API/api';\nimport { ListTrends } from 'components/ListTrends/ListTrends';\nimport { useEffect, useState } from 'react';\nimport { MainTitle } from './Home.styled';\n\nexport default function Home() {\n  const [arrMovies, setArrMovies] = useState([]);\n\n  useEffect(() => {\n    async function fetchMovies() {\n      try {\n        const movies = await fetchData();\n\n        setArrMovies(movies.results);\n      } catch (error) {\n        console.log('err');\n      }\n    }\n    fetchMovies();\n  }, []);\n\n  return (\n    <>\n      <MainTitle>Trending today</MainTitle>\n      <ListTrends list={arrMovies}></ListTrends>\n    </>\n  );\n}\n"],"names":["ListTrendsStyled","styled","_templateObject","_taggedTemplateLiteral","p","theme","colors","active","ItemList","_templateObject2","darkPurple","ListTrends","_ref","list","location","useLocation","_jsx","children","map","el","_jsxs","src","poster_path","concat","BASE_POSTER_URL","alt","original_title","width","height","Link","to","id","state","from","title","MainTitle","Home","_useState","useState","_useState2","_slicedToArray","arrMovies","setArrMovies","useEffect","_fetchMovies","_asyncToGenerator","_regeneratorRuntime","_callee","movies","_context","prev","next","fetchData","sent","results","t0","console","log","stop","apply","arguments","fetchMovies","_Fragment"],"sourceRoot":""}