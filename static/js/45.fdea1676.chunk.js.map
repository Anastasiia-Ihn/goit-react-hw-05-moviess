{"version":3,"file":"static/js/45.fdea1676.chunk.js","mappings":"gNAEaA,EAAmBC,EAAAA,GAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,6QAa5BC,EAAWH,EAAAA,GAAAA,GAASI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,Q,SCZpBG,EAAa,SAAHC,GAAkB,IAAZC,EAAID,EAAJC,KAC3BC,QAAQC,IAAIF,GACZ,IAAMG,GAAWC,EAAAA,EAAAA,MAEjB,OACEC,EAAAA,EAAAA,KAACb,EAAgB,CAAAc,SACdN,EAAKO,KAAI,SAAAC,GAAE,OACVC,EAAAA,EAAAA,MAACb,EAAQ,CAAAU,SAAA,EAELD,EAAAA,EAAAA,KAAA,OACEK,IAAG,mCAAAC,OAAqCH,EAAGI,aAC3CC,IAAKL,EAAGM,eACRC,MAAO,OAGXV,EAAAA,EAAAA,KAACW,EAAAA,GAAI,CAACC,GAAE,WAAAN,OAAaH,EAAGU,IAAMC,MAAO,CAAEC,KAAMjB,GAAWG,UACtDD,EAAAA,EAAAA,KAAA,MAAAC,SAAKE,EAAGa,YATGb,EAAGU,GAWP,KAInB,C,8HCnBaI,EAAS,eAAAvB,GAAAwB,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAAC,EAAA,OAAAH,IAAAA,MAAA,SAAAI,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAIrB,OAHIJ,EAAS,IAAIK,gBAAgB,CACjCC,SAAU,QACVC,QAASC,EAAAA,KACTN,EAAAE,KAAA,EAEiBK,EAAAA,EAAAA,IAAU,GAADxB,OARb,kDAQyB,KAAAA,OAAIe,IAAU,KAAD,EAA3C,OAAJC,EAAIC,EAAAQ,KAAAR,EAAAS,OAAA,SACHV,EAAKW,MAAI,wBAAAV,EAAAW,OAAA,GAAAd,EAAA,KACjB,kBARqB,OAAA1B,EAAAyC,MAAA,KAAAC,UAAA,K,2BCJTC,E,OAAYjD,GAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,6E,SCGnB,SAASgD,IACtB,IAAAC,GAAkCC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAvCI,EAASF,EAAA,GAAEG,EAAYH,EAAA,GAe9B,OAbAI,EAAAA,EAAAA,YAAU,WACkB,SAAAC,IAQzB,OARyBA,GAAA5B,EAAAA,EAAAA,GAAAC,IAAAA,MAA1B,SAAAC,IAAA,IAAA2B,EAAA,OAAA5B,IAAAA,MAAA,SAAAI,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEyBR,IAAY,KAAD,EAA1B8B,EAAMxB,EAAAQ,KAEZa,EAAaG,EAAOC,SAASzB,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAA0B,GAAA1B,EAAA,SAE7B3B,QAAQC,IAAI,OAAO,yBAAA0B,EAAAW,OAAA,GAAAd,EAAA,mBAEtBe,MAAA,KAAAC,UAAA,EATc,WACWU,EAAAX,MAAC,KAADC,UAAA,CAS1Bc,EACF,GAAG,KAGD9C,EAAAA,EAAAA,MAAA+C,EAAAA,SAAA,CAAAlD,SAAA,EACED,EAAAA,EAAAA,KAACqC,EAAS,CAAApC,SAAC,oBACXD,EAAAA,EAAAA,KAACP,EAAAA,EAAU,CAACE,KAAMgD,MAGxB,C","sources":["components/ListTrends/ListTrends.styled.js","components/ListTrends/ListTrends.jsx","API/api.js","pages/Home/Home.styled.js","pages/Home/Home.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ListTrendsStyled = styled.ul`\n  display: grid;\n  max-width: calc(100vw - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n  grid-gap: 16px;\n  margin-top: 0;\n  margin-bottom: 50px;\n  padding: 0;\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport const ItemList = styled.li``;\n","import { Link, useLocation } from 'react-router-dom';\nimport { ItemList, ListTrendsStyled } from './ListTrends.styled';\n\nexport const ListTrends = ({ list }) => {\n  console.log(list);\n  const location = useLocation();\n\n  return (\n    <ListTrendsStyled>\n      {list.map(el => (\n        <ItemList key={el.id}>\n          {\n            <img\n              src={`https://image.tmdb.org/t/p/w500/${el.poster_path}`}\n              alt={el.original_title}\n              width={200}\n            ></img>\n          }\n          <Link to={`/movies/${el.id}`} state={{ from: location }}>\n            <h3>{el.title}</h3>\n          </Link>\n        </ItemList>\n      ))}\n    </ListTrendsStyled>\n  );\n};\n","import axios from 'axios';\nimport { key } from '../utils/constants';\n\n// const key = '84201912ed7e3ce22261b9e0387010b4';\nconst BASE_URL = 'https://api.themoviedb.org/3/trending/movie/day';\n\nexport const fetchData = async () => {\n  const params = new URLSearchParams({\n    language: 'en-US',\n    api_key: key,\n  });\n\n  const resp = await axios.get(`${BASE_URL}?${params}`);\n  return resp.data;\n};\n","import styled from 'styled-components';\n\nexport const MainTitle = styled.h1`\n  text-align: center;\n  font-size: 60px;\n  margin-bottom: 60px;\n`;\n","import { fetchData } from 'API/api';\nimport { ListTrends } from 'components/ListTrends/ListTrends';\nimport { useEffect, useState } from 'react';\nimport { MainTitle } from './Home.styled';\n\nexport default function Home() {\n  const [arrMovies, setArrMovies] = useState([]);\n\n  useEffect(() => {\n    async function fetchMovies() {\n      try {\n        const movies = await fetchData();\n\n        setArrMovies(movies.results);\n      } catch (error) {\n        console.log('err');\n      }\n    }\n    fetchMovies();\n  }, []);\n\n  return (\n    <>\n      <MainTitle>Trending today</MainTitle>\n      <ListTrends list={arrMovies}></ListTrends>\n    </>\n  );\n}\n"],"names":["ListTrendsStyled","styled","_templateObject","_taggedTemplateLiteral","ItemList","_templateObject2","ListTrends","_ref","list","console","log","location","useLocation","_jsx","children","map","el","_jsxs","src","concat","poster_path","alt","original_title","width","Link","to","id","state","from","title","fetchData","_asyncToGenerator","_regeneratorRuntime","_callee","params","resp","_context","prev","next","URLSearchParams","language","api_key","key","axios","sent","abrupt","data","stop","apply","arguments","MainTitle","Home","_useState","useState","_useState2","_slicedToArray","arrMovies","setArrMovies","useEffect","_fetchMovies","movies","results","t0","fetchMovies","_Fragment"],"sourceRoot":""}