{"version":3,"file":"static/js/272.8f79f659.chunk.js","mappings":"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","sources":["API/apiById.js","../node_modules/date-fns/esm/_lib/requiredArgs/index.js","../node_modules/date-fns/esm/toDate/index.js","helpers/fitDate.js","../node_modules/date-fns/esm/getYear/index.js","components/ReviewMovie/ReviewMovie.styled.js","components/AddInfo/AddInfo.jsx","components/ReviewMovie/ReviewMovie.jsx","pages/MovieById/MovieById.js"],"sourcesContent":["import axios from 'axios';\nimport { BASE_URL, key } from '../utils/constants';\n\n// const key = '84201912ed7e3ce22261b9e0387010b4';\n// const BASE_URL = 'https://api.themoviedb.org/3/movie';\n\nexport const fetchDataById = async movieId => {\n  const params = new URLSearchParams({\n    language: 'en-US',\n    api_key: key,\n  });\n  const resp = await axios.get(`${BASE_URL}/${movieId}?${params}`);\n  return resp.data;\n};\n","export default function requiredArgs(required, args) {\n  if (args.length < required) {\n    throw new TypeError(required + ' argument' + (required > 1 ? 's' : '') + ' required, but only ' + args.length + ' present');\n  }\n}","import _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name toDate\n * @category Common Helpers\n * @summary Convert the given argument to an instance of Date.\n *\n * @description\n * Convert the given argument to an instance of Date.\n *\n * If the argument is an instance of Date, the function returns its clone.\n *\n * If the argument is a number, it is treated as a timestamp.\n *\n * If the argument is none of the above, the function returns Invalid Date.\n *\n * **Note**: *all* Date arguments passed to any *date-fns* function is processed by `toDate`.\n *\n * @param {Date|Number} argument - the value to convert\n * @returns {Date} the parsed date in the local time zone\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Clone the date:\n * const result = toDate(new Date(2014, 1, 11, 11, 30, 30))\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert the timestamp to date:\n * const result = toDate(1392098430000)\n * //=> Tue Feb 11 2014 11:30:30\n */\nexport default function toDate(argument) {\n  requiredArgs(1, arguments);\n  var argStr = Object.prototype.toString.call(argument);\n\n  // Clone the date\n  if (argument instanceof Date || _typeof(argument) === 'object' && argStr === '[object Date]') {\n    // Prevent the date to lose the milliseconds when passed to new Date() in IE10\n    return new Date(argument.getTime());\n  } else if (typeof argument === 'number' || argStr === '[object Number]') {\n    return new Date(argument);\n  } else {\n    if ((typeof argument === 'string' || argStr === '[object String]') && typeof console !== 'undefined') {\n      // eslint-disable-next-line no-console\n      console.warn(\"Starting with v2.0.0-beta.1 date-fns doesn't accept strings as date arguments. Please use `parseISO` to parse strings. See: https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#string-arguments\");\n      // eslint-disable-next-line no-console\n      console.warn(new Error().stack);\n    }\n    return new Date(NaN);\n  }\n}","import { getYear } from 'date-fns';\n\nexport const fitDate = date => getYear(new Date(date));\n","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name getYear\n * @category Year Helpers\n * @summary Get the year of the given date.\n *\n * @description\n * Get the year of the given date.\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the year\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Which year is 2 July 2014?\n * const result = getYear(new Date(2014, 6, 2))\n * //=> 2014\n */\nexport default function getYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  return toDate(dirtyDate).getFullYear();\n}","import styled from \"styled-components\";\n\nexport const CardMovie = styled.div``\n\nexport const CardMovieImg = styled.img``\n\nexport const CardMovieH1 = styled.h1``\n\nexport const CardMovieH2 = styled.h2``\n\nexport const CardMovieText = styled.p``","import { NavLink, Outlet, useParams } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst StyledLink = styled(NavLink)`\n  &.active {\n    color: #06490c;\n  }\n`;\nexport const AddInfo = () => {\n  const param = useParams();\n\n  return (\n    <>\n      <ul>\n        <StyledLink to={`/movies/${param.movieById}/cast`}>\n          <li>Cast</li>\n        </StyledLink>\n        <StyledLink to={`/movies/${param.movieById}/reviews`}>\n          <li>Reviews</li>\n        </StyledLink>\n      </ul>\n      <Outlet />\n    </>\n  );\n};\n","import { fitDate } from 'helpers/fitDate';\nimport {\n  CardMovie,\n  CardMovieImg,\n  CardMovieH1,\n  CardMovieH2,\n  CardMovieText,\n} from './ReviewMovie.styled';\nimport { AddInfo } from 'components/AddInfo/AddInfo';\n\nexport const ReviewMovie = ({ foundEl }) => {\n  const { title, genres, overview, release_date, poster_path, vote_average } =\n    foundEl;\n\n  return (\n    <CardMovie>\n      <div>\n        <CardMovieImg\n          src={`https://image.tmdb.org/t/p/w500/${poster_path}`}\n          alt={title}\n          width={200}\n        />\n        <CardMovieH1>\n          {title} ({fitDate(release_date)})\n        </CardMovieH1>\n        <CardMovieText>User Score: {Math.round(vote_average)}%</CardMovieText>\n        <CardMovieH2>Overview</CardMovieH2>\n        <CardMovieText>{overview}</CardMovieText>\n        <CardMovieH2>Genres</CardMovieH2>\n        <CardMovieText>\n          {genres?.map(genre => (\n            <li key={genre.id}>{genre.name}</li>\n          ))}\n        </CardMovieText>\n      </div>\n      <AddInfo />\n    </CardMovie>\n  );\n};\n","import { fetchDataById } from 'API/apiById';\nimport { ReviewMovie } from 'components/ReviewMovie/ReviewMovie.jsx';\nimport { useEffect, useState } from 'react';\nimport { Link, useLocation, useParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\n\nexport default function MovieById() {\n  const param = useParams();\n  const [movieEl, setMovieEl] = useState({});\n  const location = useLocation();\n  console.log(location);\n  useEffect(() => {\n    async function getMobieById() {\n      try {\n        const movie = await fetchDataById(param.movieById);\n        setMovieEl(movie);\n        console.log(movie);\n      } catch (error) {\n        toast.error('Not found');\n      }\n    }\n\n    getMobieById();\n  }, [param.movieById]);\n\n  return (\n    <>\n      <Link to={location.state?.from ?? '/movies'}>Go back</Link>\n      {movieEl && <ReviewMovie foundEl={movieEl} />}\n    </>\n  );\n}\n"],"names":["fetchDataById","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","movieId","params","resp","_context","prev","next","URLSearchParams","language","api_key","key","axios","concat","BASE_URL","sent","abrupt","data","stop","_x","apply","arguments","requiredArgs","required","args","length","TypeError","toDate","argument","argStr","Object","prototype","toString","call","Date","_typeof","getTime","console","warn","Error","stack","NaN","fitDate","date","dirtyDate","getFullYear","getYear","CardMovie","styled","_templateObject","_taggedTemplateLiteral","CardMovieImg","_templateObject2","CardMovieH1","_templateObject3","CardMovieH2","_templateObject4","CardMovieText","_templateObject5","StyledLink","NavLink","AddInfo","param","useParams","_jsxs","_Fragment","children","_jsx","to","movieById","Outlet","ReviewMovie","foundEl","title","genres","overview","release_date","poster_path","vote_average","src","alt","width","Math","round","map","genre","name","id","MovieById","_location$state$from","_location$state","_useState","useState","_useState2","_slicedToArray","movieEl","setMovieEl","location","useLocation","log","useEffect","_getMobieById","movie","t0","toast","getMobieById","Link","state","from"],"sourceRoot":""}