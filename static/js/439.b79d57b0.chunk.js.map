{"version":3,"file":"static/js/439.b79d57b0.chunk.js","mappings":"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","sources":["API/api.js","components/ReviewMovie/ReviewMovie.styled.js","components/AddInfo/AddInfo.styled.js","components/AddInfo/AddInfo.jsx","components/ReviewMovie/ReviewMovie.jsx","helpers/fitDate.js","pages/MovieById/MovieById.styled.js","pages/MovieById/MovieById.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst key = '84201912ed7e3ce22261b9e0387010b4';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = {\n  language: 'en-US',\n  api_key: key,\n};\n\n// =================================================================\n\nexport const fetchData = async () => {\n  const resp = await axios.get(`/trending/movie/day`);\n  return resp.data;\n};\n\n// ==================================================================\n\nexport const fetchDataById = async movieId => {\n  const resp = await axios.get(`/movie/${movieId}?`);\n  return resp.data;\n};\n\n// ==================================================================\n\nexport const fetchDataByIdForCast = async movieId => {\n  const resp = await axios.get(`/${movieId}/credits?`);\n  return resp.data.cast;\n};\n\n// ==================================================================\n\nexport const fetchDataByIdForReviews = async movieId => {\n  const resp = await axios.get(`/movie/${movieId}/reviews?`);\n  return resp.data.results;\n};\n\n// ==================================================================\n\nexport const fetchDataByValue = async valueInput => {\n  const resp = await axios.get(`/search/movie?query= ${valueInput}`);\n  return resp.data;\n};\n\n// ==================================================================\n","import styled from 'styled-components';\n\nexport const CardMovie = styled.div`\n  display: flex;\n  gap: 24px;\n  border-radius: 5px;\n  box-shadow: 10px 11px 10px 2px rgba(34, 60, 80, 0.2);\n  overflow: hidden;\n  margin-bottom: 24px;\n  padding: 16px 8px;\n  /* height: 418px; */\n`;\n\nexport const CardMovieImg = styled.img``;\n\nexport const CardMovieH1 = styled.h1`\n  margin-bottom: 12px;\n`;\n\nexport const CardMovieH2 = styled.h2`\n  margin-bottom: 12px;\n`;\n\nexport const CardMovieText = styled.p`\n  margin-bottom: 28px;\n`;\nexport const CardMovieListGenres = styled.ul`\n  display: flex;\n  gap: 12px;\n`;\n","import styled from 'styled-components';\n\nexport const ListAddInfoStyled = styled.ul`\n  display: flex;\n  gap: 20px;\n\n  margin-left: 24px;\n  font-size: 32px;\n`;\n","import { NavLink, Outlet, useParams } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { ListAddInfoStyled } from './AddInfo.styled';\n\nconst StyledLink = styled(NavLink)`\n  &.active {\n    color: #06490c;\n  }\n`;\nexport const AddInfo = () => {\n  const param = useParams();\n\n  return (\n    <>\n      Additional information\n      <ListAddInfoStyled>\n        <li>\n          <StyledLink to={`/movies/${param.movieById}/cast`}>Cast</StyledLink>\n        </li>\n        <li>\n          <StyledLink to={`/movies/${param.movieById}/reviews`}>\n            Reviews\n          </StyledLink>\n        </li>\n      </ListAddInfoStyled>\n      <Outlet />\n    </>\n  );\n};\n","import { fitDate } from 'helpers/fitDate';\nimport {\n  CardMovie,\n  CardMovieImg,\n  CardMovieH1,\n  CardMovieH2,\n  CardMovieText,\n  CardMovieListGenres,\n} from './ReviewMovie.styled';\nimport { AddInfo } from 'components/AddInfo/AddInfo';\n\nexport const ReviewMovie = ({ foundEl }) => {\n  const { title, genres, overview, release_date, poster_path, vote_average } =\n    foundEl;\n\n  return (\n    <>\n      <CardMovie>\n        <CardMovieImg\n          src={`https://image.tmdb.org/t/p/w500/${poster_path}`}\n          alt={title}\n          width={200}\n        />\n        <div>\n          <CardMovieH1>\n            {title} ({fitDate(release_date)})\n          </CardMovieH1>\n          <CardMovieText>User Score: {Math.round(vote_average)}%</CardMovieText>\n          <CardMovieH2>Overview</CardMovieH2>\n          <CardMovieText>{overview}</CardMovieText>\n          <CardMovieH2>Genres</CardMovieH2>\n          <CardMovieListGenres>\n            {genres?.map(genre => (\n              <li key={genre.id}>{genre.name}</li>\n            ))}\n          </CardMovieListGenres>\n        </div>\n      </CardMovie>\n      <AddInfo />\n    </>\n  );\n};\n","import { getYear } from 'date-fns';\n\nexport const fitDate = date => getYear(new Date(date));\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const BackLink = styled(Link)`\n  border: 1px solid;\n  border-radius: 4px;\n  width: 120px;\n  padding: 8px;\n  & :hover,\n  :focus {\n    color: red;\n  }\n`;\n","import { fetchDataById } from 'API/api';\nimport { ReviewMovie } from 'components/ReviewMovie/ReviewMovie.jsx';\nimport { useEffect, useState } from 'react';\nimport { useLocation, useParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { BackLink } from './MovieById.styled';\nimport { BiArrowBack } from 'react-icons/bi';\n\nexport default function MovieById() {\n  const { movieById } = useParams();\n  const [movieEl, setMovieEl] = useState({});\n  const location = useLocation();\n  useEffect(() => {\n    if (!movieById) return;\n\n    async function getMobieById() {\n      try {\n        const movie = await fetchDataById(movieById);\n        setMovieEl(movie);\n      } catch (error) {\n        toast.error('Not found');\n      }\n    }\n\n    getMobieById();\n  }, [movieById]);\n\n  return (\n    <>\n      <BackLink to={location.state?.from ?? '/'}>\n        <BiArrowBack /> Go back\n      </BackLink>\n      {movieEl && <ReviewMovie foundEl={movieEl} />}\n    </>\n  );\n}\n"],"names":["axios","language","api_key","fetchData","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","resp","_context","prev","next","sent","abrupt","data","stop","apply","arguments","fetchDataById","_ref2","_callee2","movieId","_context2","concat","_x","fetchDataByIdForCast","_ref3","_callee3","_context3","cast","_x2","fetchDataByIdForReviews","_ref4","_callee4","_context4","results","_x3","fetchDataByValue","_ref5","_callee5","valueInput","_context5","_x4","CardMovie","styled","_templateObject","_taggedTemplateLiteral","CardMovieImg","_templateObject2","CardMovieH1","_templateObject3","CardMovieH2","_templateObject4","CardMovieText","_templateObject5","CardMovieListGenres","_templateObject6","ListAddInfoStyled","StyledLink","NavLink","AddInfo","param","useParams","_jsxs","_Fragment","children","_jsx","to","movieById","Outlet","ReviewMovie","date","foundEl","title","genres","overview","release_date","poster_path","vote_average","src","alt","width","getYear","Date","Math","round","map","genre","name","id","BackLink","Link","MovieById","_location$state$from","_location$state","_useState","useState","_useState2","_slicedToArray","movieEl","setMovieEl","location","useLocation","useEffect","_getMobieById","movie","t0","toast","getMobieById","state","from","BiArrowBack"],"sourceRoot":""}