{"version":3,"file":"static/js/655.2144a0bb.chunk.js","mappings":"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","sources":["components/ListTrends/ListTrends.styled.js","components/ListTrends/ListTrends.jsx","API/apiByValue.js","components/SearchByMovie/SearchByMovie.styled.js","components/SearchByMovie/SearchByMovie.jsx","pages/Movies/Movies.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ListTrendsStyled = styled.ul`\n  display: grid;\n  max-width: calc(100vw - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n  grid-gap: 16px;\n  margin-top: 0;\n  margin-bottom: 50px;\n  padding: 0;\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport const ItemList = styled.li``;\n","import { Link, useLocation } from 'react-router-dom';\nimport { ItemList, ListTrendsStyled } from './ListTrends.styled';\n\nexport const ListTrends = ({ list }) => {\n  console.log(list);\n  const location = useLocation();\n\n  return (\n    <ListTrendsStyled>\n      {list.map(el => (\n        <ItemList key={el.id}>\n          {\n            <img\n              src={`https://image.tmdb.org/t/p/w500/${el.poster_path}`}\n              alt={el.original_title}\n              width={200}\n            ></img>\n          }\n          <Link to={`/movies/${el.id}`} state={{ from: location }}>\n            <h3>{el.title}</h3>\n          </Link>\n        </ItemList>\n      ))}\n    </ListTrendsStyled>\n  );\n};\n","import axios from 'axios';\nimport { BASE_URL, key } from '../utils/constants';\n\n// const key = '84201912ed7e3ce22261b9e0387010b4';\n// const BASE_URL = 'https://api.themoviedb.org/3/search/movie';\n\nexport const fetchDataByValue = async (valueInput, page) => {\n  const params = new URLSearchParams({\n    language: 'en-US',\n    api_key: key,\n    query: valueInput,\n    page: page,\n  });\n\n  const resp = await axios.get(`${BASE_URL}?${params}`);\n  return resp.data;\n};\n","import styled from \"styled-components\";\n\nexport const SearchInput = styled.input`\n display: inline-block;\n \n  width: 100%;\n  font: inherit;\n  font-size: 20px;\n  border: none;\n  border-color: #586974;\n  outline: none;\n  padding-left: 4px;\n  padding-right: 4px;\n\n  ::placeholder {\n    font: inherit;\n    font-size: 18px;}\n`\n\nexport const SearchBtn = styled.button`\nwidth: 80px;\nheight: 30px;`\n\n\nexport const SearchForm = styled.form`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n  background-color: #235874;\n  border-radius: 3px;\n  overflow: hidden;\n`;\n\n// export const SearchFormButton = styled.button`\n//   display: inline-block;\n//   width: 48px;\n//   height: 48px;\n//   border: 0;\n//   background-image: url('https://image.flaticon.com/icons/svg/149/149852.svg');\n//   background-size: 40%;\n//   background-repeat: no-repeat;\n//   background-position: center;\n//   opacity: 0.6;\n//   transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n//   cursor: pointer;\n//   outline: none;\n\n//   &:hover {\n//     opacity: 1;\n//   }\n// `;\n// export const SearchFormInput = styled.input`\n//   display: inline-block;\n//   width: 100%;\n//   font: inherit;\n//   font-size: 20px;\n//   border: none;\n//   outline: none;\n//   padding-left: 4px;\n//   padding-right: 4px;\n\n//   ::placeholder {\n//     font: inherit;\n//     font-size: 18px;\n//   }\n// `;","import { useState } from 'react';\nimport { SearchBtn, SearchInput, SearchForm } from './SearchByMovie.styled';\n\nexport const SearchByMovie = ({ onSubmit }) => {\n  const [value, setValue] = useState('');\n\n  const handleChange = evt => {\n    setValue(evt.target.value);\n  };\n\n  return (\n    <SearchForm\n      onSubmit={e => {\n        e.preventDefault();\n        onSubmit(e);\n      }}\n    >\n      <SearchInput\n        type=\"text\"\n        placeholder=\"Search movies\"\n        value={value}\n        onChange={handleChange}\n      />\n      <SearchBtn type=\"submit\">Search</SearchBtn>\n    </SearchForm>\n  );\n};\n","import { fetchDataByValue } from 'API/apiByValue';\nimport { ListTrends } from 'components/ListTrends/ListTrends';\nimport { SearchByMovie } from 'components/SearchByMovie/SearchByMovie';\nimport { useEffect, useState } from 'react';\n// import { useSearchParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\n\nexport default function Movies() {\n  // const [searchParams, setSearchParams] = useSearchParams();\n\n  const [listMovies, setListMovies] = useState([]);\n  const [query, setQuery] = useState('');\n  const [loader, setLoader] = useState(false);\n  const [error, setError] = useState(false);\n  const [page, setPage] = useState(1);\n\n  useEffect(() => {\n    if (query === '') {\n      return;\n    }\n\n    async function fetchData() {\n      setLoader(true);\n\n      try {\n        const { results } = await fetchDataByValue(query, page);\n        console.log(results.length);\n\n        if (!results.length) {\n          setError(true);\n          toast.error('Sorry, not found');\n        }\n\n        setListMovies(results);\n      } catch (err) {\n        setError(true);\n        toast.error('Not found');\n        // if (err.code !== 'ERR_CANCELED') {\n        //   setError(true);\n        //   toast.error('Not found');\n        // }\n      } finally {\n        setLoader(false);\n      }\n    }\n\n    fetchData();\n  }, [query, page]);\n\n  const handlerClickOnForm = evt => {\n    // evt.preventDefault();\n\n    if (evt.target[0].value.trim() === '') {\n      return error && toast.error('Please, write your query.');\n    }\n\n    setQuery(evt.target[0]?.value.trim());\n    console.log(evt.target[0].value);\n    console.log(loader);\n    setPage(1);\n    // setListMovies([]);\n  };\n  console.log(listMovies);\n  // const handlerClickOnForm = ({{ input: { value } }) => {\n  //   if (value === '') {\n  //     return error && toast.error('Please, write your query.');\n  //   }\n  //   console.log(value);\n  //   setQuery(value);\n  //   console.log(loader);\n  //   setPage(1);\n  //   setListMovies([]);\n  // };\n\n  // const handlerClickOnLoadMore = () => {\n  //   setPage(prev => prev + 1);\n  // };\n\n  return (\n    <>\n      <SearchByMovie onSubmit={handlerClickOnForm}></SearchByMovie>\n      <ListTrends list={listMovies}></ListTrends>\n    </>\n  );\n}\n"],"names":["ListTrendsStyled","styled","_templateObject","_taggedTemplateLiteral","ItemList","_templateObject2","ListTrends","_ref","list","console","log","location","useLocation","_jsx","children","map","el","_jsxs","src","concat","poster_path","alt","original_title","width","Link","to","id","state","from","title","fetchDataByValue","_asyncToGenerator","_regeneratorRuntime","_callee","valueInput","page","params","resp","_context","prev","next","URLSearchParams","language","api_key","key","query","axios","BASE_URL","sent","abrupt","data","stop","_x","_x2","apply","arguments","SearchInput","SearchBtn","SearchForm","_templateObject3","SearchByMovie","onSubmit","_useState","useState","_useState2","_slicedToArray","value","setValue","e","preventDefault","type","placeholder","onChange","evt","target","Movies","listMovies","setListMovies","_useState3","_useState4","setQuery","_useState5","_useState6","loader","setLoader","_useState7","_useState8","error","setError","_useState9","_useState10","setPage","useEffect","_fetchData","_yield$fetchDataByVal","results","length","toast","t0","finish","fetchData","_Fragment","_evt$target$","trim"],"sourceRoot":""}